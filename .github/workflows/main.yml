name: my_storage_CI

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.11
    - name: Dependecies and tests
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r frontend/requirements.txt
        python -m flake8 .

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 
      - name: Build and push api container
        uses: docker/build-push-action@v3
        with:
          context: api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my_storage_api
      - name: Build and push frontend container
        uses: docker/build-push-action@v3
        with:
          context: frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my_storage_frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.HOST_SSH_KEY }}
          script: |
            cd deploy
            docker compose down -v
            docker image rm ${{ secrets.DOCKER_USERNAME }}/my_storage_api
            docker image rm ${{ secrets.DOCKER_USERNAME }}/my_storage_frontend
            docker pull ${{ secrets.DOCKER_USERNAME }}/my_storage_api
            docker pull ${{ secrets.DOCKER_USERNAME }}/my_storage_frontend
            echo API_URL_REDIRECT='${{ secrets.HOST }}' > .env
            docker compose up -d
